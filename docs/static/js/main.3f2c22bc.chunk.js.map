{"version":3,"sources":["EntradaGif.js","GifItem.js","helpers/getGifs.js","Grid.js","hooks/useGiftFetch.js","GifExpert.js","index.js"],"names":["EntradaGif","setCategorias","useState","busqueda","setbusqueda","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GridItem","imagen","title","className","src","alt","getData","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","Grid","loading","state","setstate","useEffect","setTimeout","then","img","useGiftFetch","key","GifExpert","categorias","ReactDOM","render","document","getElementById"],"mappings":"gKAkCeA,EAhCW,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAEtCC,EAFsC,KAE5BC,EAF4B,KAmB7C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACYJ,EAASK,OACbC,OAAS,GACfR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAwBO,SAOtC,2BACIC,KAAK,OACLC,MAAQT,EACRU,SApBS,SAACP,GAClBF,EAAYE,EAAEQ,OAAOF,YCUdG,EAbS,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAGhC,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAMH,EAASI,IAAMH,IAC1B,2BAAKA,K,uBCPJI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEkCC,UAAWH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAf,GAAW,IAAD,EAC5B,MAAO,CACHgB,GAAIhB,EAAOgB,GACXf,MAAOD,EAAOC,MACdD,OAAM,UAAEA,EAAOiB,cAAT,aAAE,EAAeC,iBAAiBV,QAT7B,kBAaZM,GAbY,4CAAH,sDC2BLK,EA1BK,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,UAAgB,ECDX,SAAEA,GAAgB,IAAD,EAGfpB,mBAAS,CAC3B2B,KAAO,GACPO,SAAU,IALuB,mBAGlCC,EAHkC,KAG3BC,EAH2B,KAwBzC,OAfAC,qBAAU,WACNC,YAAW,WACLnB,EAASC,GACdmB,MAAK,SAAAC,GAAG,OACLJ,EAAS,CACLT,KAAMa,EACNN,SAAS,SAIf,QAEH,CAAEd,IAGEe,EDnBoBM,CAAcrB,GAAjCO,EAJ2B,EAI3BA,KAAOO,EAJoB,EAIpBA,QAGf,OACI,6BACI,4BAAMd,GACJc,EAAU,yBAAKlB,UAAU,WAAU,4CACjC,yBAAKA,UAAU,0CACdW,EAAKE,KAAI,SAACW,GAAD,OACN,kBAAE,EAAF,eACIE,IAAMF,EAAIV,IACLU,UEKdG,EApBU,WAAO,IAAD,EACS3C,mBAAS,CAAC,WADnB,mBACpB4C,EADoB,KACR7C,EADQ,KAE3B,OACI,6BACI,yCACA,kBAAE,EAAF,CAAaA,cAAgBA,IAC7B,4BACK6C,EAAWf,KAAI,SAAArB,GAAG,OACH,kBAAE,EAAF,CACAkC,IAAKlC,EACLY,UAAYZ,UCV5CqC,IAASC,OACP,kBAAE,EAAF,MACAC,SAASC,eAAe,U","file":"static/js/main.3f2c22bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const EntradaGif = ({ setCategorias }) => {\r\n\r\n    const [busqueda, setbusqueda] = useState('')\r\n\r\n    const handleSearch = (e) =>{\r\n        setbusqueda(e.target.value)\r\n    }\r\n\r\n    \r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const value = busqueda.trim()\r\n        if( value.length > 0){\r\n            setCategorias((cat) => [ busqueda, ...cat ])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input \r\n                type=\"text\"\r\n                value={ busqueda }\r\n                onChange={ handleSearch }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EntradaGif","import React from 'react'\r\n\r\n\r\n\r\nexport const GridItem = ({  imagen, title }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ imagen } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GridItem","\r\n\r\n\r\nexport const getData = async (categoria) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI( categoria )}&limit=10&api_key=0j8llTrdK9ysZT9wq6NN2HSLk5f9gB5G`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(imagen => {\r\n        return {\r\n            id: imagen.id,\r\n            title: imagen.title,\r\n            imagen: imagen.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport GridItem from './GifItem';\r\nimport { useGiftFetch  } from './hooks/useGiftFetch'\r\n\r\nexport const Grid = ({ categoria }) => {\r\n\r\n\r\n    \r\n    const { data , loading } = useGiftFetch( categoria );\r\n\r\n  \r\n    return (\r\n        <div>\r\n            <h2>{ categoria }</h2>\r\n            { loading ? <div className=\"loading\"><p >cargando... </p></div>: \r\n                <div className=\"grid animate__animated animate__bounce\">\r\n                {data.map((img) => (\r\n                    < GridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Grid","import { useState, useEffect } from 'react'\r\nimport { getData } from '../helpers/getGifs'\r\n\r\nexport const useGiftFetch = ( categoria ) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n            data : [],\r\n            loading : true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=>{\r\n              getData( categoria )\r\n        .then(img => \r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            })\r\n        )\r\n \r\n        },1500)\r\n     \r\n    }, [ categoria ])\r\n   \r\n\r\n    return state;\r\n}","import React,{ useState } from 'react'\r\nimport EntradaGif from './EntradaGif'\r\nimport Grid from './Grid'\r\n\r\nexport const GifExpert = () => {\r\n    const [categorias, setCategorias] = useState(['itachi'])\r\n    return (\r\n        <div>\r\n            <h1>GifExpert</h1>\r\n            < EntradaGif setCategorias={ setCategorias } />\r\n            <ul>\r\n                {categorias.map(cat => (\r\n                                < Grid \r\n                                key={cat} \r\n                                categoria={ cat }\r\n                                /> \r\n                                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifExpert\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert'\n\nReactDOM.render(\n  < GifExpert />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}